/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */

plugins {
	// Apply the java-library plugin for API and implementation separation.
	id 'java-library'
}

plugins {
	id "com.diffplug.spotless" version "6.8.0"
}

repositories {
	// Use Maven Central for resolving dependencies.
	mavenCentral()
}

dependencies {
	// Use JUnit Jupiter for testing.
	testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'

	// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.13.3'

	// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.3'

	// https://mvnrepository.com/artifact/com.github.tomakehurst/wiremock-jre8
	testImplementation group: 'com.github.tomakehurst', name: 'wiremock-jre8', version: '2.33.2'

	// https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp
	implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.9.3'
}

tasks.named('test') {
	// Use JUnit Platform for unit tests.
	useJUnitPlatform()
}

spotless {
	// optional: limit format enforcement to just the files changed by this feature branch
	// ratchetFrom 'origin/main'

	format 'misc', {
		// define the files to apply `misc` to
		target '*.gradle', '*.md', '.gitignore'

		// define the steps to apply to those files
		trimTrailingWhitespace()
		indentWithTabs() // or spaces. Takes an integer argument if you don't like 4
		endWithNewline()
	}
	java {
		// apply a specific flavor of google-java-format
		googleJavaFormat('1.7')
	}
}
